/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Array, ArrayInterface } from "../Array";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputPointer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gluePointer",
        type: "uint256",
      },
    ],
    name: "_joinReferenceType",
    outputs: [
      {
        internalType: "bytes",
        name: "tempBytes",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16[]",
        name: "a",
        type: "bytes16[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "a",
        type: "bytes[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "a",
        type: "bytes4[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "a",
        type: "bytes[]",
      },
      {
        internalType: "bytes",
        name: "glue",
        type: "bytes",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "a",
        type: "bytes32[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes3[]",
        name: "a",
        type: "bytes3[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8[]",
        name: "a",
        type: "bytes8[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "a",
        type: "string[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes2[]",
        name: "a",
        type: "bytes2[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "a",
        type: "uint16[]",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "a",
        type: "string[]",
      },
      {
        internalType: "string",
        name: "glue",
        type: "string",
      },
    ],
    name: "join",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610bdf61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100de5760003560e01c8063754536da1161008b578063c9fa24d411610065578063c9fa24d41461019f578063f25f142d146101b2578063fca1c0b9146101c557600080fd5b8063754536da1461016b5780638af7caa91461017e5780639bce4e141461019157600080fd5b806339ec8870116100bc57806339ec8870146101325780633e815a6414610145578063597fc09f1461015857600080fd5b80632a2b9e11146100e35780632a7f1c041461010c5780632fdc8c201461011f575b600080fd5b6100f66100f13660046104f5565b6101d3565b6040516101039190610b12565b60405180910390f35b6100f661011a36600461090c565b6101ea565b6100f661012d3660046107a4565b61020b565b6100f6610140366004610947565b61021b565b6100f6610153366004610669565b610232565b6100f6610166366004610aa6565b610242565b6100f66101793660046106f0565b6102eb565b6100f661018c366004610858565b6102fb565b6100f661011a3660046109a8565b6100f66101ad3660046105b5565b61030b565b6100f66101c0366004610a10565b61031b565b6100f66101403660046109db565b6060816101e38160106000610327565b9392505050565b6060610205826040518060200160405280600081525061021b565b92915050565b6060816101e38160046000610327565b606082826102298282610242565b95945050505050565b6060816101e38160206000610327565b60405181516020808301919081111561025a57602084fd5b60208401518551602087016020820281016000825b828110156102c85780518051928301926020918201918104601f821615150160005b818110156102b3578351602082028d0152602084019350600181019050610291565b5050989098018681528701975060200161026f565b50600019909301909402919091018552505050601f01601f191660405292915050565b6060816101e38160036000610327565b6060816101e38160086000610327565b6060816101e38160026000610327565b6060816101e381600260f05b60608084516020860160208202810160405193508683028452602084019250815b81811015610362578051871b845292870192602001610348565b505050601f01601f191660405290509392505050565b600082601f830112610388578081fd5b8135602061039d61039883610b56565b610b25565b80838252828201915082860187848660051b89010111156103bc578586fd5b855b858110156103fd57813567ffffffffffffffff8111156103dc578788fd5b6103ea8a87838c010161048a565b85525092840192908401906001016103be565b5090979650505050505050565b600082601f83011261041a578081fd5b8135602061042a61039883610b56565b80838252828201915082860187848660051b8901011115610449578586fd5b855b858110156103fd57813567ffffffffffffffff811115610469578788fd5b6104778a87838c010161048a565b855250928401929084019060010161044b565b600082601f83011261049a578081fd5b813567ffffffffffffffff8111156104b4576104b4610b7a565b6104c7601f8201601f1916602001610b25565b8181528460208386010111156104db578283fd5b816020850160208301379081016020019190915292915050565b60006020808385031215610507578182fd5b823567ffffffffffffffff81111561051d578283fd5b8301601f8101851361052d578283fd5b803561053b61039882610b56565b80828252848201915084840188868560051b870101111561055a578687fd5b8694505b838510156105a95780357fffffffffffffffffffffffffffffffff0000000000000000000000000000000081168114610595578788fd5b83526001949094019391850191850161055e565b50979650505050505050565b600060208083850312156105c7578182fd5b823567ffffffffffffffff8111156105dd578283fd5b8301601f810185136105ed578283fd5b80356105fb61039882610b56565b80828252848201915084840188868560051b870101111561061a578687fd5b8694505b838510156105a95780357fffff00000000000000000000000000000000000000000000000000000000000081168114610655578788fd5b83526001949094019391850191850161061e565b6000602080838503121561067b578182fd5b823567ffffffffffffffff811115610691578283fd5b8301601f810185136106a1578283fd5b80356106af61039882610b56565b80828252848201915084840188868560051b87010111156106ce578687fd5b8694505b838510156105a95780358352600194909401939185019185016106d2565b60006020808385031215610702578182fd5b823567ffffffffffffffff811115610718578283fd5b8301601f81018513610728578283fd5b803561073661039882610b56565b80828252848201915084840188868560051b8701011115610755578687fd5b8694505b838510156105a95780357fffffff000000000000000000000000000000000000000000000000000000000081168114610790578788fd5b835260019490940193918501918501610759565b600060208083850312156107b6578182fd5b823567ffffffffffffffff8111156107cc578283fd5b8301601f810185136107dc578283fd5b80356107ea61039882610b56565b80828252848201915084840188868560051b8701011115610809578687fd5b8694505b838510156105a95780357fffffffff0000000000000000000000000000000000000000000000000000000081168114610844578788fd5b83526001949094019391850191850161080d565b6000602080838503121561086a578182fd5b823567ffffffffffffffff811115610880578283fd5b8301601f81018513610890578283fd5b803561089e61039882610b56565b80828252848201915084840188868560051b87010111156108bd578687fd5b8694505b838510156105a95780357fffffffffffffffff000000000000000000000000000000000000000000000000811681146108f8578788fd5b8352600194909401939185019185016108c1565b60006020828403121561091d578081fd5b813567ffffffffffffffff811115610933578182fd5b61093f84828501610378565b949350505050565b60008060408385031215610959578081fd5b823567ffffffffffffffff80821115610970578283fd5b61097c86838701610378565b93506020850135915080821115610991578283fd5b5061099e8582860161048a565b9150509250929050565b6000602082840312156109b9578081fd5b813567ffffffffffffffff8111156109cf578182fd5b61093f8482850161040a565b600080604083850312156109ed578182fd5b823567ffffffffffffffff80821115610a04578384fd5b61097c8683870161040a565b60006020808385031215610a22578182fd5b823567ffffffffffffffff811115610a38578283fd5b8301601f81018513610a48578283fd5b8035610a5661039882610b56565b80828252848201915084840188868560051b8701011115610a75578687fd5b8694505b838510156105a957803561ffff81168114610a92578788fd5b835260019490940193918501918501610a79565b60008060408385031215610ab8578182fd5b50508035926020909101359150565b60008151808452815b81811015610aec57602081850181015186830182015201610ad0565b81811115610afd5782602083870101525b50601f01601f19169290920160200192915050565b6020815260006101e36020830184610ac7565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b4e57610b4e610b7a565b604052919050565b600067ffffffffffffffff821115610b7057610b70610b7a565b5060051b60200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212209e16794eb451056b3f78b712f1dd2607f60fd42dfe87316d522406e297577a3064736f6c63430008040033";

export class Array__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Array> {
    return super.deploy(overrides || {}) as Promise<Array>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Array {
    return super.attach(address) as Array;
  }
  connect(signer: Signer): Array__factory {
    return super.connect(signer) as Array__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrayInterface {
    return new utils.Interface(_abi) as ArrayInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Array {
    return new Contract(address, _abi, signerOrProvider) as Array;
  }
}
