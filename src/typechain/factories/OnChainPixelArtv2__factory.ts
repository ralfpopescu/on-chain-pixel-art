/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OnChainPixelArtv2,
  OnChainPixelArtv2Interface,
} from "../OnChainPixelArtv2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "base64Encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "layer1",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "layer2",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalPixels",
        type: "uint256",
      },
    ],
    name: "composeLayers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "comp",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "palette1",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "palette2",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "colorCount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "colorCount2",
        type: "uint256",
      },
    ],
    name: "composePalettes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "composedPalette",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "colors",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "pixelCompression",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "colorCount",
        type: "uint256",
      },
    ],
    name: "encodeColorArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "encoded",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "layers",
        type: "uint256[]",
      },
    ],
    name: "getColorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "colorCount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "canvas",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "palette",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "xDim",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yDim",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "svgExtension",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "paddingX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paddingY",
        type: "uint256",
      },
    ],
    name: "render",
    outputs: [
      {
        internalType: "string",
        name: "svg",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "toHexString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "encoded",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "uriSvg",
    outputs: [
      {
        internalType: "string",
        name: "encoded",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e17806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bd5760003560e01c80636900a3ae11610076578063c19728641161005b578063c19728641461016a578063d5fb1b191461018b578063e89cec8f1461019e57600080fd5b80636900a3ae146101445780638fba8d5c1461015757600080fd5b80635b2125fa116100a75780635b2125fa1461010b5780635bab8bda1461011e5780635ef8c1341461013157600080fd5b80624aaa15146100c25780630de72b7e146100eb575b600080fd5b6100d56100d0366004610860565b6101b1565b6040516100e29190610bbe565b60405180910390f35b6100fe6100f9366004610a78565b610262565b6040516100e29190610cf2565b6100d56101193660046108ca565b61030f565b6100d561012c3660046109e6565b6103c5565b6100fe61013f36600461093b565b61041c565b6100fe610152366004610b15565b6104db565b6100fe610165366004610b15565b61052f565b61017d61017836600461079a565b610583565b6040519081526020016100e2565b6100fe610199366004610a32565b610626565b6100fe6101ac366004610a78565b610679565b6040517e4aaa1500000000000000000000000000000000000000000000000000000000815260609073__$2e286f769ee588d09b231b39a8f53392dc$__90624aaa159061020690879087908790600401610c02565b60006040518083038186803b15801561021e57600080fd5b505af4158015610232573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261025a91908101906107cd565b949350505050565b6040517f0de72b7e00000000000000000000000000000000000000000000000000000000815260609073__$2e286f769ee588d09b231b39a8f53392dc$__90630de72b7e906102b5908590600401610cf2565b60006040518083038186803b1580156102cd57600080fd5b505af41580156102e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103099190810190610aab565b92915050565b6040517f5b2125fa00000000000000000000000000000000000000000000000000000000815260609073__$2e286f769ee588d09b231b39a8f53392dc$__90635b2125fa90610368908890889088908890600401610c38565b60006040518083038186803b15801561038057600080fd5b505af4158015610394573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103bc91908101906107cd565b95945050505050565b6040517f5bab8bda00000000000000000000000000000000000000000000000000000000815260609073__$2e286f769ee588d09b231b39a8f53392dc$__90635bab8bda9061020690879087908790600401610ccd565b6040517f5ef8c13400000000000000000000000000000000000000000000000000000000815260609073__$6911898b6c9b16b74576d7d8f2c63f8b8f$__90635ef8c1349061047b908b908b908b908b908b908b908b90600401610c71565b60006040518083038186803b15801561049357600080fd5b505af41580156104a7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104cf9190810190610aab565b98975050505050505050565b6040517f6900a3ae0000000000000000000000000000000000000000000000000000000081526004810182905260609073__$2e286f769ee588d09b231b39a8f53392dc$__90636900a3ae906024016102b5565b6040517f8fba8d5c0000000000000000000000000000000000000000000000000000000081526004810182905260609073__$2e286f769ee588d09b231b39a8f53392dc$__90638fba8d5c906024016102b5565b6040517fc197286400000000000000000000000000000000000000000000000000000000815260009073__$2e286f769ee588d09b231b39a8f53392dc$__9063c1972864906105d6908590600401610bab565b60206040518083038186803b1580156105ee57600080fd5b505af4158015610602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103099190610b2d565b6040517fd5fb1b1900000000000000000000000000000000000000000000000000000000815260609073__$2e286f769ee588d09b231b39a8f53392dc$__9063d5fb1b19906102b5908590600401610cf2565b6040517fe89cec8f00000000000000000000000000000000000000000000000000000000815260609073__$2e286f769ee588d09b231b39a8f53392dc$__9063e89cec8f906102b5908590600401610cf2565b60006106df6106da84610d5a565b610d05565b90508281528383830111156106f357600080fd5b828260208301376000602084830101529392505050565b600082601f83011261071a578081fd5b8135602061072a6106da83610d36565b80838252828201915082860187848660051b8901011115610749578586fd5b855b858110156107675781358452928401929084019060010161074b565b5090979650505050505050565b600082601f830112610784578081fd5b610793838335602085016106cc565b9392505050565b6000602082840312156107ab578081fd5b813567ffffffffffffffff8111156107c1578182fd5b61025a8482850161070a565b600060208083850312156107df578182fd5b825167ffffffffffffffff8111156107f5578283fd5b8301601f81018513610805578283fd5b80516108136106da82610d36565b80828252848201915084840188868560051b8701011115610832578687fd5b8694505b83851015610854578051835260019490940193918501918501610836565b50979650505050505050565b600080600060608486031215610874578182fd5b833567ffffffffffffffff8082111561088b578384fd5b6108978783880161070a565b945060208601359150808211156108ac578384fd5b506108b98682870161070a565b925050604084013590509250925092565b600080600080608085870312156108df578081fd5b843567ffffffffffffffff808211156108f6578283fd5b6109028883890161070a565b95506020870135915080821115610917578283fd5b506109248782880161070a565b949794965050505060408301359260600135919050565b600080600080600080600060e0888a031215610955578283fd5b873567ffffffffffffffff8082111561096c578485fd5b6109788b838c0161070a565b985060208a013591508082111561098d578485fd5b6109998b838c0161070a565b975060408a0135965060608a0135955060808a01359150808211156109bc578485fd5b506109c98a828b01610774565b93505060a0880135915060c0880135905092959891949750929550565b6000806000606084860312156109fa578283fd5b833567ffffffffffffffff811115610a10578384fd5b610a1c8682870161070a565b9660208601359650604090950135949350505050565b600060208284031215610a43578081fd5b813567ffffffffffffffff811115610a59578182fd5b8201601f81018413610a69578182fd5b61025a848235602084016106cc565b600060208284031215610a89578081fd5b813567ffffffffffffffff811115610a9f578182fd5b61025a84828501610774565b600060208284031215610abc578081fd5b815167ffffffffffffffff811115610ad2578182fd5b8201601f81018413610ae2578182fd5b8051610af06106da82610d5a565b818152856020838501011115610b04578384fd5b6103bc826020830160208601610d82565b600060208284031215610b26578081fd5b5035919050565b600060208284031215610b3e578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610b7457815187529582019590820190600101610b58565b509495945050505050565b60008151808452610b97816020860160208601610d82565b601f01601f19169290920160200192915050565b6020815260006107936020830184610b45565b6020808252825182820181905260009190848201906040850190845b81811015610bf657835183529284019291840191600101610bda565b50909695505050505050565b606081526000610c156060830186610b45565b8281036020840152610c278186610b45565b915050826040830152949350505050565b608081526000610c4b6080830187610b45565b8281036020840152610c5d8187610b45565b604084019590955250506060015292915050565b60e081526000610c8460e083018a610b45565b8281036020840152610c96818a610b45565b90508760408401528660608401528281036080840152610cb68187610b7f565b60a0840195909552505060c0015295945050505050565b606081526000610ce06060830186610b45565b60208301949094525060400152919050565b6020815260006107936020830184610b7f565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d2e57610d2e610db2565b604052919050565b600067ffffffffffffffff821115610d5057610d50610db2565b5060051b60200190565b600067ffffffffffffffff821115610d7457610d74610db2565b50601f01601f191660200190565b60005b83811015610d9d578181015183820152602001610d85565b83811115610dac576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212206261b5d00bef2cfc368b3d38fe03446cd69bd4220f88c79f5700386fbdf79bc264736f6c63430008040033";

type OnChainPixelArtv2ConstructorParams =
  | [linkLibraryAddresses: OnChainPixelArtv2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnChainPixelArtv2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class OnChainPixelArtv2__factory extends ContractFactory {
  constructor(...args: OnChainPixelArtv2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        OnChainPixelArtv2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: OnChainPixelArtv2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2e286f769ee588d09b231b39a8f53392dc\\$__", "g"),
      linkLibraryAddresses[
        "contracts/OnChainPixelArtLibrary.sol:OnChainPixelArtLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6911898b6c9b16b74576d7d8f2c63f8b8f\\$__", "g"),
      linkLibraryAddresses[
        "contracts/OnChainPixelArtLibraryv2.sol:OnChainPixelArtLibraryv2"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OnChainPixelArtv2> {
    return super.deploy(overrides || {}) as Promise<OnChainPixelArtv2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OnChainPixelArtv2 {
    return super.attach(address) as OnChainPixelArtv2;
  }
  connect(signer: Signer): OnChainPixelArtv2__factory {
    return super.connect(signer) as OnChainPixelArtv2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnChainPixelArtv2Interface {
    return new utils.Interface(_abi) as OnChainPixelArtv2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnChainPixelArtv2 {
    return new Contract(address, _abi, signerOrProvider) as OnChainPixelArtv2;
  }
}

export interface OnChainPixelArtv2LibraryAddresses {
  ["contracts/OnChainPixelArtLibrary.sol:OnChainPixelArtLibrary"]: string;
  ["contracts/OnChainPixelArtLibraryv2.sol:OnChainPixelArtLibraryv2"]: string;
}
